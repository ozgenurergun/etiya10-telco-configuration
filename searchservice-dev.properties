spring.application.name=searchservice
server.port=0
#Eureka Configuration

eureka.client.fetch-registry=true
eureka.client.register-with-eureka = true
eureka.client.service-url.defaultZone= http://localhost:8090/eureka
# Eurekaya kay?t olurken hostname yerine Ip adresini kullan?r
eureka.instance.prefer-ip-address= true
eureka.instance.instance-id= ${spring.application.name}:${instanceId:${random.value}}

#kafka configurations
spring.cloud.stream.kafka.binder.brokers=localhost:29092
spring.cloud.stream.bindings.customerCreated-in-0.destination=customer-created-event
spring.cloud.stream.bindings.customerCreated-in-0.group=search-service-customer

spring.cloud.stream.bindings.addressCreated-in-0.destination=address-created-event
spring.cloud.stream.bindings.addressCreated-in-0.group=search-service-address-create

spring.cloud.stream.bindings.addressUpdated-in-0.destination=address-updated-event
spring.cloud.stream.bindings.addressUpdated-in-0.group=search-service-address-update

spring.cloud.stream.bindings.addressDeleted-in-0.destination=address-deleted-event
spring.cloud.stream.bindings.addressDeleted-in-0.group=search-service-address-delete

spring.cloud.stream.bindings.contactmediumCreated-in-0.destination=contact-medium-created-event
spring.cloud.stream.bindings.contactmediumCreated-in-0.group=search-service-contactmedium-create

spring.cloud.stream.bindings.contactmediumUpdated-in-0.destination=contact-medium-updated-event
spring.cloud.stream.bindings.contactmediumUpdated-in-0.group=search-service-contactmedium-update

spring.cloud.stream.bindings.contactmediumDeleted-in-0.destination=contact-medium-deleted-event
spring.cloud.stream.bindings.contactmediumDeleted-in-0.group=search-service-contactmedium-delete


spring.cloud.function.definition=customerCreated;addressCreated;addressUpdated;addressDeleted;contactmediumCreated;contactmediumUpdated;contactmediumDeleted

# spring.kafka.bootstrap-servers=localhost:29092
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=*
# spring.kafka.consumer.auto-offset-reset=earliest

jwt.secret.key=CkPCC50RUQfXmRrwKs3+p+jkEnj9L+Hg+s1vYdIo0mU=
jwt.expiration=60000